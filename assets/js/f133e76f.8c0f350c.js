"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[4919],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>b});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=r.createContext({}),d=function(e){var t=r.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(o),g=n,b=p["".concat(l,".").concat(g)]||p[g]||u[g]||a;return o?r.createElement(b,i(i({ref:t},c),{},{components:o})):r.createElement(b,i({ref:t},c))}));function b(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,i=new Array(a);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:n,i[1]=s;for(var d=2;d<a;d++)i[d]=o[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}g.displayName="MDXCreateElement"},6573:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=o(7462),n=(o(7294),o(3905));const a={sidebar_label:"Embed Google Assistant",sidebar_position:0,tags:["Raspberry Pi","Git","Github Account Configuration","Linux","Google Assistant SDK","VS Code","API","Google"]},i="Introduction",s={unversionedId:"developer-docs/embed-google-assistant/index",id:"developer-docs/embed-google-assistant/index",title:"Introduction",description:"For all nested docs, I was the sole author on the project. the goal for the project was to enable third-party developers to download and embed the Google Assistant first with a Raspberry Pi and later with an original device. Embedding the Assistant with the Pi was the second phase of the Google Developers Built-in program, which I also helped implement.",source:"@site/docs/developer-docs/embed-google-assistant/index.md",sourceDirName:"developer-docs/embed-google-assistant",slug:"/developer-docs/embed-google-assistant/",permalink:"/portfolio/docs/developer-docs/embed-google-assistant/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/developer-docs/embed-google-assistant/index.md",tags:[{label:"Raspberry Pi",permalink:"/portfolio/docs/tags/raspberry-pi"},{label:"Git",permalink:"/portfolio/docs/tags/git"},{label:"Github Account Configuration",permalink:"/portfolio/docs/tags/github-account-configuration"},{label:"Linux",permalink:"/portfolio/docs/tags/linux"},{label:"Google Assistant SDK",permalink:"/portfolio/docs/tags/google-assistant-sdk"},{label:"VS Code",permalink:"/portfolio/docs/tags/vs-code"},{label:"API",permalink:"/portfolio/docs/tags/api"},{label:"Google",permalink:"/portfolio/docs/tags/google"}],version:"current",sidebarPosition:0,frontMatter:{sidebar_label:"Embed Google Assistant",sidebar_position:0,tags:["Raspberry Pi","Git","Github Account Configuration","Linux","Google Assistant SDK","VS Code","API","Google"]},sidebar:"tutorialSidebar",previous:{title:"Developer Docs",permalink:"/portfolio/docs/developer-docs/"},next:{title:"Configure and Test Audio",permalink:"/portfolio/docs/developer-docs/embed-google-assistant/hardware-and-network"}},l={},d=[{value:"Tools",id:"tools",level:2}],c={toc:d};function p(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"For all nested docs, I was the sole author on the project. the goal for the project was to enable third-party developers to download and embed the Google Assistant first with a Raspberry Pi and later with an original device. Embedding the Assistant with the Pi was the second phase of the Google Developers Built-in program, which I also helped implement."),(0,n.kt)("h2",{id:"tools"},"Tools"),(0,n.kt)("p",null,"To complete the project, docs were written and managed in a docs-as-code enviornment. Similar to the workflow below."))}p.isMDXComponent=!0}}]);